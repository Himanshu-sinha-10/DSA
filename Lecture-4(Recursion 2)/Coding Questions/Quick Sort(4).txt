Quick Sort Code
Send Feedback
Sort an array A using Quick Sort.
Change in the input array itself. So no need to return or print anything.


Input format :
Line 1 : Integer n i.e. Array size
Line 2 : Array elements (separated by space)
Output format :
Array elements in increasing order (separated by space)
Constraints :
1 <= n <= 10^3
Sample Input 1 :
6 
2 6 8 5 4 3
Sample Output 1 :
2 3 4 5 6 8
Sample Input 2 :
5
1 5 2 7 3
Sample Output 2 :
1 2 3 5 7 

_______________solution_________________

void swap(int& x, int& y)
{
    int temp=x;
    x=y;
    y=temp;
}

int partition(int input[],int start,int end)
{
    int pivot=input[end];
    int pi=start;
    
    for(int i=start;i<end;i++)
    {
        if(input[i]<=pivot)
        
            swap(input[i],input[pi++]);
    }
    
    swap(input[pi],input[end]);
    
    return pi;
    
    
}



void qs(int input[],int start,int end)
{
    if(start>=end)
        return;
    int pi=partition(input,start,end);
    qs(input,start,pi-1);
    qs(input,pi+1,end);
}
void quickSort(int input[], int size) {
  /* Don't write main().
     Don't read input, it is passed as function argument.
     Change in the given array itself.
     Taking input and printing output is handled automatically.
  */
    qs(input,0,size-1);
    

}